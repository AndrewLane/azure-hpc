		
SAMPLES = ["A", "B"]


rule all:
    input:
        "report.html"


rule bwa_map:
    input:
        "data/genome.fa",
        "data/samples/{sample}.fastq"
    output:
        "mapped_reads/{sample}.bam"
    shell:
         "echo -e \"#!/usr/bin/env bash\ncd $FILESHARE/example ;\n bwa mem {input} | samtools view -Sb - > {output}\" > $FILESHARE/example/jobrun.sh ;\n $SHIPYARD/shipyard jobs add --configdir $FILESHARE/example/azurebatch/combined --tail stderr.txt\n"



rule samtools_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    shell:
         "echo -e \"#!/usr/bin/env bash\ncd $FILESHARE/example ;\n samtools sort -T sorted_reads/{wildcards.sample} -O bam {input} > {output}\" > $FILESHARE/example/jobrun.sh ;\n $SHIPYARD/shipyard jobs add --configdir $FILESHARE/example/azurebatch/samtools --tail stderr.txt\n"



rule samtools_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    shell:
         "echo -e \"#!/usr/bin/env bash\ncd $FILESHARE/example ;\n samtools index {input}\" > $FILESHARE/example/jobrun.sh ;\n $SHIPYARD/shipyard jobs add --configdir $FILESHARE/example/azurebatch/combined --tail stderr.txt\n"


rule bcftools_call:
    input:
        fa="data/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=SAMPLES),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=SAMPLES)
    output:
        "calls/all.vcf"
    shell:
         "echo -e \"#!/usr/bin/env bash\ncd $FILESHARE/example ;\n samtools mpileup -g -f {input.fa} {input.bam} | bcftools call -mv - > {output}\" > $FILESHARE/example/jobrun.sh ;\n $SHIPYARD/shipyard jobs add --configdir $FILESHARE/example/azurebatch/combined --tail stderr.txt\n"



rule report:
    input:
        "calls/all.vcf"
    output:
        "report.html"
    run:
        from snakemake.utils import report
        with open(input[0]) as vcf:
            n_calls = sum(1 for l in vcf if not l.startswith("#"))

        report("""
        An example variant calling workflow
        ===================================

        Reads were mapped to the Yeast
        reference genome and variants were called jointly with
        SAMtools/BCFtools.

        This resulted in {n_calls} variants (see Table T1_).
        """, output[0], T1=input[0])